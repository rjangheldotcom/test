buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://repo.spring.io/release" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
	}
}
plugins {
	id "org.sonarqube" version "2.5"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/release" }
}

configurations {
	integrationTest.extendsFrom testRuntime
}

dependencies {
	testCompile 'io.rest-assured:rest-assured:3.0.3'
	compile 'io.rest-assured:json-path:3.0.3'
	testCompile 'io.rest-assured:json-schema-validator:3.0.3'
	testCompile 'io.rest-assured:spring-mock-mvc:3.0.3'
	compile "org.aspectj:aspectjweaver:1.8.9"
	compile "com.googlecode.json-simple:json-simple:1.1.1"
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'io.swagger:swagger-annotations:1.5.0'
	compile 'io.springfox:springfox-swagger2:2.6.1'
	compile 'io.springfox:springfox-swagger-ui:2.0.2'
	compile 'org.apache.shiro:shiro-spring:1.4.0'
	compile 'org.apache.commons:commons-lang3:3.6'
	compile 'javax:javaee-web-api:7.0'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile group: 'org.testng', name: 'testng', version: '6.9.9'
	compile group: 'org.ajoberstar', name: 'gradle-jacoco', version: '0.3.0'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
	compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
	testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.7.3'
	testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.1'
}

sourceSets {
	integrationTest {
		java.srcDir file('src/integrationTest/java')
		resources.srcDir file('src/integrationTest/resources')
		compileClasspath = sourceSets.main.output + configurations.integrationTest
		runtimeClasspath = output + compileClasspath
	}
}

task integrationTest(type: Test, description: " Runs the integration tests.", group:"Smoke Test"){
	useTestNG() {
		//testClassesDir = sourceSets.integrationTest.output.classesDir
		classpath = sourceSets.integrationTest.runtimeClasspath
		suites sourceSets.integrationTest.resources.find {'testsuite/testng.xml'}
//        suites 'src/integrationTest/resources/testsuite/testng.xml'
	}
}

jacoco {
	toolVersion = "0.7.9"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	reports {
		csv.enabled false
		xml.enabled true
		html.destination file("${buildDir}/jacocoHtml")
	}
}

sonarqube {
	properties {
		property "sonar.sources", "src/main/java"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.host.url", "http://bnym-1130032329.us-east-1.elb.amazonaws.com"
		property "sonar.jacoco.coveragePlugin", "jacoco"
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.3'
}

project.tasks["sonarqube"].dependsOn "build"